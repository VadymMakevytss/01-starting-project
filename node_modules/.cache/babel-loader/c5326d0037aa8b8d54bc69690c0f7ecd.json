{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst slice = createSlice({\n  name: 'counter',\n  initialState,\n  reducer: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    dicrement(state, action) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});","map":{"version":3,"sources":["C:/tests/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","slice","name","reducer","increment","state","action","dicrement","increase","payload","store","counterSlice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAAC;AACxBM,EAAAA,IAAI,EAAE,SADkB;AAExBJ,EAAAA,YAFwB;AAGxBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACN,OAAN;AACD,KAHM;;AAIPQ,IAAAA,SAAS,CAACF,KAAD,EAAOC,MAAP,EAAe;AACtBD,MAAAA,KAAK,CAACN,OAAN;AACD,KANM;;AAOPS,IAAAA,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACG,OAAvC;AACD,KATM;;AAUPT,IAAAA,WAAW,CAACK,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZM;AAHe,CAAD,CAAzB;AAoBA,MAAMU,KAAK,GAAGb,cAAc,CAAC;AAC3BM,EAAAA,OAAO,EAAEQ,YAAY,CAACR;AADK,CAAD,CAA5B","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = {counter: 0, showCounter: true};\n\nconst slice = createSlice({\n  name: 'counter',\n  initialState,\n  reducer: {\n    increment(state, action) {\n      state.counter++\n    },\n    dicrement(state,action) {\n      state.counter++\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload\n    },\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n})\n"]},"metadata":{},"sourceType":"module"}