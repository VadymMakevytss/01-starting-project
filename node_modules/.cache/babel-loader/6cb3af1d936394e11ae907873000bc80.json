{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSLice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increase(state, actions) {\n      state.counter++;\n    },\n\n    dicrease(state, action) {\n      state.counter--;\n    },\n\n    increment(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/tests/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","createSLice","name","reducers","increase","state","actions","dicrease","action","increment","payload","store","reducer","counterActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEA,MAAMC,YAAY,GAAGC,WAAW,CAAC;AAC/BC,EAAAA,IAAI,EAAE,SADyB;AAE/BL,EAAAA,YAF+B;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACvBD,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORW,IAAAA,SAAS,CAACJ,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACE,OAAvC;AACD,KATO;;AAURX,IAAAA,WAAW,CAACM,KAAD,EAAQG,MAAR,EAAgB;AACzBH,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,KAAK,GAAGf,cAAc,CAAC;AAC3BgB,EAAAA,OAAO,EAAEZ,YAAY,CAACY;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACM,OAApC;AACP,eAAeK,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = {counter: 0, showCounter: true}\n\nconst counterSlice = createSLice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increase(state, actions) {\n      state.counter++;\n    },\n    dicrease(state, action) {\n      state.counter--;\n    },\n    increment(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n})\n\nexport const counterActions = counterSlice.actions\nexport default store;\n"]},"metadata":{},"sourceType":"module"}