{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    dicrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    showCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'increment':\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n\n    case 'dicrement':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n\n    case 'increase':\n      return {\n        counter: state.counter + action.value,\n        showCounter: state.showCounter\n      };\n\n    case 'toggle':\n      return {\n        counter: state.counter,\n        showCounter: !state.showCounter\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/tests/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","dicrement","increase","action","value","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,KAAvC;AACD,KATO;;AAURT,IAAAA,WAAW,CAACK,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;;AAmBA,MAAMU,cAAc,GAAG,CAACL,KAAK,GAAGP,YAAT,EAAuBU,MAAvB,KAAkC;AACvD,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,aAAO;AACLZ,QAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADpB;AAELC,QAAAA,WAAW,EAAEK,KAAK,CAACL;AAFd,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADpB;AAELC,QAAAA,WAAW,EAAEK,KAAK,CAACL;AAFd,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,KAD3B;AAELT,QAAAA,WAAW,EAAEK,KAAK,CAACL;AAFd,OAAP;;AAIF,SAAK,QAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAEM,KAAK,CAACN,OADV;AAELC,QAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFf,OAAP;;AAIF;AAAS,aAAOK,KAAP;AArBX;AAuBD,CAxBD;;AA2BA,MAAMO,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++\n    },\n    dicrement(state) {\n      state.counter--\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.value\n    },\n    showCounter(state) {\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\nconst counterReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'increment':\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      }\n    case 'dicrement':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      }\n    case 'increase':\n      return {\n        counter: state.counter + action.value,\n        showCounter: state.showCounter\n      }\n    case 'toggle': \n      return {\n        counter: state.counter,\n        showCounter: !state.showCounter\n      }\n    default: return state;\n  }\n}\n\n\nconst store = createStore(counterReducer)\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}