{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  couner: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    dicrement(state, action) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nep;","map":{"version":3,"sources":["C:/tests/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","couner","showCounter","counterSlice","name","reducers","increment","state","action","counter","dicrement","increase","payload","store","reducer","ep"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAE,CAAT;AAAYC,EAAAA,WAAW,EAAE;AAAzB,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACE,OAAN;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACE,OAAN;AACD,KANO;;AAORE,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACE,OAAN,GAAgBD,MAAM,CAACI,OAAvC;AACD,KATO;;AAURV,IAAAA,WAAW,CAACK,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAoBA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B;AAIAC,EAAE","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = {couner: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    dicrement(state, action) {\n      state.counter--\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload\n    },\n    showCounter(state, action) {\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n})\n\nep\n"]},"metadata":{},"sourceType":"module"}