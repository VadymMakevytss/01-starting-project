{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    dicrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    showCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/tests/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","dicrement","increase","action","value","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,KAAvC;AACD,KATO;;AAURT,IAAAA,WAAW,CAACK,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMU,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAE;AAACZ,IAAAA,OAAO,EAAEE,YAAY,CAACU;AAAvB;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGX,YAAY,CAACY,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = {counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++\n    },\n    dicrement(state) {\n      state.counter--\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.value\n    },\n    showCounter(state) {\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\nconst store = configureStore({\n  reducer: {counter: counterSlice.reducer}\n})\n\nexport const counterActions = counterSlice.actions\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}